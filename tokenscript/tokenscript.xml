<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
		  xmlns:xml="http://www.w3.org/XML/1998/namespace"
		  xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xmlns:ethereum="urn:ethereum:constantinople"
		  name="charityConnect">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">Charity Connect</ts:string>
			<ts:string quantity="other">Charity Connect</ts:string>
		</ts:plurals>
	</ts:label>
	<ts:meta>
		<ts:description xml:lang="en">This is your Charity Membership Card, and reward points CHARITYeet.</ts:description>
        <ts:aboutUrl xml:lang="en">$tst{ABOUT_URL}</ts:aboutUrl>
        <ts:iconUrl xml:lang="en">$tst{ICON_URL}</ts:iconUrl>
        <ts:env name="FRONTEND_HOST">$tst{FRONTEND_HOST}</ts:env>
		<ts:env name="BACKEND_HOST">$tst{BACKEND_HOST}</ts:env>
		<ts:env name="CONTRACT_CHAIN">$tst{CONTRACT_CHAIN}</ts:env>
	</ts:meta>
    <!--Renaming `"Token"` to `"MembershipCard"` breaks filtering cards by origins. Don't do this without verifying cards are displayed correctly-->
	<ts:contract interface="erc721" name="Token">
            <ts:address network="$tst{CONTRACT_CHAIN}">$tst{NFT_CONTRACT_ADDRESS}</ts:address>
	</ts:contract>
	<ts:contract interface="erc20" name="Points">
            <ts:address network="$tst{CONTRACT_CHAIN}">$tst{POINTS_CONTRACT_ADDRESS}</ts:address>
	</ts:contract>
	<ts:contract name="DonationManager">
            <ts:address network="$tst{CONTRACT_CHAIN}">$tst{DONATION_CONTRACT_ADDRESS}</ts:address>

        <ts:abi>
            <![CDATA[
            [
                {
                    "constant": true,
                    "inputs": [],
                    "name": "getAllCharityNames",
                    "outputs": [
                        {
                            "name": "charityNames",
                            "type": "string[]"
                        }
                    ],
                    "payable": false,
                    "stateMutability": "view",
                    "type": "function"
                }
            ]
            ]]>
        </ts:abi>

	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
        <ts:ethereum contract="Token"/>
		<ts:ethereum contract="Points"/>
	</ts:origins>

    <!--Comparing with points=-1 didn't work when points is 0 so use a magic number-->
    <ts:selection name="dummyForcePointsToLoadAlwaysFalse" filter="points=999989999">
		<ts:label>
			<ts:string xml:lang="en">Force points attribute to be fetched so the `i` button has access to them without clicking a card action first</ts:string>
		</ts:label>
	</ts:selection>

    <ts:selection name="dummyForceDonationsToLoadAlwaysFalse" filter="donations=999989999">
		<ts:label>
			<ts:string xml:lang="en">Force donations attribute to be fetched so the `i` button has access to them without clicking a card action first</ts:string>
		</ts:label>
	</ts:selection>

	<ts:cards>
		<ts:viewContent name="common" xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

        <ts:card type="action" name="QuickDonate" origins="Token" exclude="dummyForcePointsToLoadAlwaysFalse">
			<ts:label>
				<ts:string xml:lang="en">Quick Donate</ts:string>
			</ts:label>
            <ts:transaction>
                <ethereum:transaction contract="DonationManager" function="quickDonate" as="uint">
                    <ts:data>
                        <ts:uint256 ref="tokenId"/>
                    </ts:data>
                    <ethereum:value>1005000000000000</ethereum:value>
                </ethereum:transaction>
            </ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="quickDonate" uiButton="false">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

        <ts:card type="action" name="DonateToCharity" origins="Token" exclude="dummyForceDonationsToLoadAlwaysFalse">
			<ts:label>
				<ts:string xml:lang="en">Donate to Charity</ts:string>
			</ts:label>
            <ts:transaction>
                <ethereum:transaction contract="DonationManager" function="donateETH" as="uint">
                    <ts:data>
                        <ts:uint256 ref="tokenId"/>
                        <ts:string local-ref="charity"/>
                    </ts:data>
                    <ethereum:value local-ref="amount"/>
                </ethereum:transaction>
            </ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="donateToCharity" uiButton="false">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="WalletPass" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Show as QR</ts:string>
			</ts:label>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="walletPass" uiButton="false">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

        <ts:card type="action" name="Vote" origins="Token">
            <ts:label>
                <ts:string xml:lang="en">Governance</ts:string>
            </ts:label>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="vote" uiButton="false">
                <ts:viewContent name="common"/>
            </ts:view>
		</ts:card>

		<ts:card type="action" name="Redeem" origins="Points">
            <ts:label>
                <ts:string xml:lang="en">Redeem</ts:string>
            </ts:label>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="redeem" uiButton="false">
                <ts:viewContent name="common"/>
            </ts:view>
		</ts:card>

		<ts:card type="action" name="Trade" origins="Points">
            <ts:label>
                <ts:string xml:lang="en">Trade</ts:string>
            </ts:label>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="trade" uiButton="false">
                <ts:viewContent name="common"/>
            </ts:view>
		</ts:card>

		<ts:card type="action" name="Transfer" origins="Points">
			<ts:label>
				<ts:string xml:lang="en">Transfer</ts:string>
			</ts:label>
			<ts:transaction>
				<ethereum:transaction contract="Points" function="transfer" as="uint">
					<ts:data>
						<ts:address local-ref="recipient"/>
						<ts:uint256 local-ref="amount"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="transfer" uiButton="false">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<!-- TODO leaderboard-->
<!--        <ts:card type="action" name="Leaderboard" origins="Token">-->
<!--            <ts:label>-->
<!--                <ts:string xml:lang="en">Leaderboard</ts:string>-->
<!--            </ts:label>-->
<!--            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="vote" uiButton="false">-->
<!--                <ts:viewContent name="common"/>-->
<!--            </ts:view>-->
<!--		</ts:card>-->

	</ts:cards>

	<ts:attribute name="points">
		<ts:type>
			<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
		</ts:type>
		<ts:label>
			<ts:string xml:lang="en">Charity Balance</ts:string>
		</ts:label>
		<ts:origins>
			<ethereum:call as="uint" contract="Points" function="balanceOf">
				<ts:data>
					<ts:address ref="ownerAddress"/>
				</ts:data>
			</ethereum:call>
		</ts:origins>
	</ts:attribute>

	<ts:attribute name="donations">
		<ts:type>
			<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
		</ts:type>
		<ts:label>
			<ts:string xml:lang="en">Donated</ts:string>
		</ts:label>
		<ts:origins>
			<ethereum:call as="uint" contract="DonationManager" function="donationByCardId">
				<ts:data>
                    <ts:uint256 ref="cardTokenId"/>
                    <ts:address>0x0000000000000000000000000000000000000000</ts:address>
				</ts:data>
			</ethereum:call>
		</ts:origins>
	</ts:attribute>

	<ts:attribute name="cardTokenId">
		<ts:type>
			<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
		</ts:type>
		<ts:label>
			<ts:string xml:lang="en">Card ID</ts:string>
		</ts:label>
		<ts:origins>
			<ethereum:call as="uint" contract="Token" function="tokenOfOwnerByIndex">
				<ts:data>
                    <ts:address ref="ownerAddress"/>
                    <ts:uint256>0</ts:uint256>
				</ts:data>
			</ethereum:call>
		</ts:origins>
	</ts:attribute>

</ts:token>
