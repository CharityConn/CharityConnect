diff --git a/node_modules/pkijs/build/index.es.js b/node_modules/pkijs/build/index.es.js
index 766e2f9..de1fded 100644
--- a/node_modules/pkijs/build/index.es.js
+++ b/node_modules/pkijs/build/index.es.js
@@ -3570,6 +3570,7 @@ ECNamedCurves.namedCurves = {};
     _a.register("P-256", "1.2.840.10045.3.1.7", 32);
     _a.register("P-384", "1.3.132.0.34", 48);
     _a.register("P-521", "1.3.132.0.35", 66);
+    _a.register("K-256", "1.3.132.0.10", 32);
     _a.register("brainpoolP256r1", "1.3.36.3.3.2.8.1.1.7", 32);
     _a.register("brainpoolP384r1", "1.3.36.3.3.2.8.1.1.11", 48);
     _a.register("brainpoolP512r1", "1.3.36.3.3.2.8.1.1.13", 64);
@@ -3779,6 +3780,7 @@ class PublicKeyInfo extends PkiObject {
                                 this._parsedKey = new RSAPublicKey({ schema: publicKeyASN1.result });
                             }
                             catch (ex) {
+                                console.warn(ex);
                             }
                         }
                     }
@@ -5754,6 +5756,13 @@ class CryptoEngine extends AbstractCryptoEngine {
                 return {
                     name: "P-521"
                 };
+            case "1.3.132.0.10":
+            	return {
+            		name: "K-256",
+            		hash: {
+            			name: "SHA-256"
+            		}
+            	};
         }
         if (safety) {
             throw new Error(`Unsupported algorithm identifier ${target ? `for ${target} ` : EMPTY_STRING}: ${oid}`);
@@ -5923,6 +5932,9 @@ class CryptoEngine extends AbstractCryptoEngine {
             case "P-521":
                 result = "1.3.132.0.35";
                 break;
+            case "K-256":
+                result = "1.3.132.0.10";
+                break;
         }
         if (!result && safety) {
             throw new Error(`Unsupported algorithm ${target ? `for ${target} ` : EMPTY_STRING}: ${algorithm.name}`);
diff --git a/node_modules/pkijs/build/index.js b/node_modules/pkijs/build/index.js
index 806a550..afd5934 100644
--- a/node_modules/pkijs/build/index.js
+++ b/node_modules/pkijs/build/index.js
@@ -3596,6 +3596,7 @@ ECNamedCurves.namedCurves = {};
     _a.register("P-256", "1.2.840.10045.3.1.7", 32);
     _a.register("P-384", "1.3.132.0.34", 48);
     _a.register("P-521", "1.3.132.0.35", 66);
+    _a.register("K-256", "1.3.132.0.10", 32);
     _a.register("brainpoolP256r1", "1.3.36.3.3.2.8.1.1.7", 32);
     _a.register("brainpoolP384r1", "1.3.36.3.3.2.8.1.1.11", 48);
     _a.register("brainpoolP512r1", "1.3.36.3.3.2.8.1.1.13", 64);
@@ -3805,6 +3806,7 @@ class PublicKeyInfo extends PkiObject {
                                 this._parsedKey = new RSAPublicKey({ schema: publicKeyASN1.result });
                             }
                             catch (ex) {
+                                console.warn(ex);
                             }
                         }
                     }
@@ -5780,6 +5782,13 @@ class CryptoEngine extends AbstractCryptoEngine {
                 return {
                     name: "P-521"
                 };
+            case "1.3.132.0.10":
+            	return {
+            		name: "K-256",
+            		hash: {
+            			name: "SHA-256"
+            		}
+            	};
         }
         if (safety) {
             throw new Error(`Unsupported algorithm identifier ${target ? `for ${target} ` : EMPTY_STRING}: ${oid}`);
@@ -5949,6 +5958,9 @@ class CryptoEngine extends AbstractCryptoEngine {
             case "P-521":
                 result = "1.3.132.0.35";
                 break;
+            case "K-256":
+            	result = "1.3.132.0.10";
+            	break;
         }
         if (!result && safety) {
             throw new Error(`Unsupported algorithm ${target ? `for ${target} ` : EMPTY_STRING}: ${algorithm.name}`);
